import { test, expect } from '@playwright/test';

test('test', async ({ page }) => {
  await page.goto('http://a31ab0521b7614fc494b75314e386461-307954604.ap-southeast-1.elb.amazonaws.com:7007/');
  const page1Promise = page.waitForEvent('popup');
  await page.locator('li').filter({ hasText: 'LoginSign in using Open ID' }).getByRole('button').click();
  const page1 = await page1Promise;
  await page1.getByLabel('Username or email').fill('catalog-user');
  await page1.getByLabel('Username or email').press('Tab');
  await page1.getByLabel('Password', { exact: true }).fill('flowsource1');
  await page1.getByRole('button', { name: 'Sign In' }).click();
  await page.goto('http://a31ab0521b7614fc494b75314e386461-307954604.ap-southeast-1.elb.amazonaws.com:7007/catalog?filters%5Bkind%5D=component');
  await page.getByPlaceholder('Filter').click();
  await page.getByPlaceholder('Filter').fill('aut');
  await page.getByRole('cell', { name: 'TicketBookingAutomation' }).click();
  await page.getByTestId('header-tab-4').click();
  await expect(page.getByRole('heading', { name: 'Code Quality' })).toBeVisible();
  await expect(page.getByText('Last Scan Date 21-6-')).toBeVisible();
  await expect(page.getByText('QUALITY GATE STATUS')).toBeVisible();
  await expect(page.getByText('Passed', { exact: true })).toBeVisible();
  await expect(page.locator('div').filter({ hasText: /^Bugs$/ }).getByRole('img')).toBeVisible();
  await expect(page.getByText('Coverage')).toBeVisible();
  await expect(page.getByText('Vulnerabilities', { exact: true })).toBeVisible();
  await expect(page.getByText('Code Smells', { exact: true })).toBeVisible();
  await expect(page.getByText('Duplications')).toBeVisible();
  await expect(page.getByText('Hotspots Reviewed')).toBeVisible();
  await expect(page.getByText('All Scans')).toBeVisible();
  await expect(page.getByText('Quality Gate Trend')).toBeVisible();
  await expect(page.getByText('Bugs - Code Smells -')).toBeVisible();
  await expect(page.getByText('Bugs', { exact: true })).toBeVisible();
});